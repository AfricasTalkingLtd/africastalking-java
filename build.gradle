
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

buildscript {
	repositories {
	    jcenter()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
	}
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
        classpath 'gradle.plugin.de.fuerstenau:BuildConfigPlugin:1.1.8'
    }
}


allprojects {
    repositories {
        jcenter()
    }
}

Set<String> publishedLibs = new HashSet<String>()
publishedLibs << 'sms'
publishedLibs << 'payment'
publishedLibs << 'token'
publishedLibs << 'airtime'
publishedLibs << 'voice'
publishedLibs << 'ussd'
publishedLibs << 'account'
publishedLibs << 'core'
publishedLibs << 'server'
configure(subprojects.findAll {publishedLibs.contains(it.name)}){
    group properties.getProperty("bintray.groupId")
    version properties.getProperty("bintray.version")

    apply plugin: 'java'
    apply plugin: "maven-publish"
    apply plugin: 'com.jfrog.bintray'
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'de.fuerstenau.buildconfig'

    targetCompatibility = 1.7
    sourceCompatibility = 1.7

    jar {
        manifest {
            attributes 'Implementation-Title': 'Africa\'s Talking SDK',
                    'Implementation-Version': version
        }
    }

    javadoc {
        source = sourceSets.main.allJava
        classpath = configurations.compile
        options {
            links "http://docs.oracle.com/javase/7/docs/api/"
        }
    }

    shadowJar {
        classifier = null // Avoid classifiers for now...
    }

    publishing {
        publications {
            SDK(MavenPublication) {
                artifact shadowJar
                groupId properties.getProperty("bintray.groupId")
                artifactId project.name
                version project.version
            }
        }
    }

    buildConfig {
        appName = project.name       // sets value of NAME field
        version = project.version   // sets value of VERSION field,
                                    // 'unspecified' if project.version is not set
        buildConfigField 'String', 'USERNAME', properties.getProperty("username")
        buildConfigField 'String', 'API_KEY', properties.getProperty("apiKey")
        
        clsName = 'BuildConfig'      // sets the name of the BuildConfig class
        packageName = project.group  // sets the package of the BuildConfig class,
                                    // 'de.fuerstenau.buildconfig' if project.group is not set
        charset = 'UTF-8'            // sets charset of the generated class,
                                    // 'UTF-8' if not set otherwise
    }

    bintray {
        dryRun = false
        publish = true
        user = properties.getProperty("bintray.user")
        key = properties.getProperty("bintray.key")
        publications = ['SDK']
        pkg {
            repo = properties.getProperty("bintray.repo")
            name = properties.getProperty("bintray.package")
            userOrg = properties.getProperty("bintray.organization")
            vcsUrl = properties.getProperty("bintray.vcsUrl")
            licenses = ['Apache-2.0']
            version {
                name = project.version
                desc = 'Africa\'s Talking SDK'
                released  = new Date()
                attributes = ['maturity': 'Development']
            }
        }
    }
}
